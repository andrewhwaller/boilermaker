# frozen_string_literal: true

module Views
<% if namespaced? -%>
  module <%= namespace.classify %>
<% end -%>
    class Show < Views::Base
      include Phlex::Rails::Helpers::LinkTo
      include Phlex::Rails::Helpers::ButtonTo
      include Phlex::Rails::Helpers::Notice

      def initialize(<%= param_name %>:)
        @<%= param_name %> = <%= param_name %>
      end

      def view_template
        if notice
          p(class: "text-green-600 mb-4") { plain(notice) }
        end

        div(class: "bg-white shadow overflow-hidden sm:rounded-lg") do
          div(class: "px-4 py-5 sm:px-6") do
            h1(class: "text-lg leading-6 font-medium text-gray-900") { "<%= model_name %> Details" }
          end
          
          div(class: "border-t border-gray-200") do
            dl do
<% display_attributes.each_with_index do |attribute, index| -%>
              div(class: "bg-<%= index.even? ? 'gray-50' : 'white' %> px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6") do
                dt(class: "text-sm font-medium text-gray-500") { "<%= attribute[:name].humanize %>" }
                dd(class: "mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2") { <%= instance_name %>.<%= attribute[:name] %> }
              end
<% end -%>
            end
          end
        end

        div(class: "mt-6 flex space-x-3") do
          link_to("Edit", 
                  edit_<%= singular_table_name %>_path(<%= instance_name %>), 
                  class: "bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded")
          link_to("Back", 
                  <%= plural_table_name %>_path, 
                  class: "bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded")
        end
      end

      private

      attr_reader :<%= param_name %>
    end
<% if namespaced? -%>
  end
<% end -%> 