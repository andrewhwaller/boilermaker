class <%= controller_class_name %>Controller < ApplicationController
  before_action :set_<%= singular_table_name %>, only: %i[ show edit update destroy ]

  def index
    @<%= plural_table_name %> = <%= orm_class.all(class_name) %>
    render Views::<%= controller_class_name %>::Index.new(<%= plural_table_name %>: @<%= plural_table_name %>)
  end

  def show
    render Views::<%= controller_class_name %>::Show.new(<%= singular_table_name %>: @<%= singular_table_name %>)
  end

  def new
    @<%= singular_table_name %> = <%= orm_class.build(class_name) %>
    render Views::<%= controller_class_name %>::New.new(<%= singular_table_name %>: @<%= singular_table_name %>)
  end

  def edit
    render Views::<%= controller_class_name %>::Edit.new(<%= singular_table_name %>: @<%= singular_table_name %>)
  end

  def create
    @<%= singular_table_name %> = <%= orm_class.build(class_name, "#{singular_table_name}_params") %>

    if @<%= singular_table_name %>.save
      redirect_to <%= redirect_resource_name %>, notice: <%= %("#{human_name} was successfully created.") %>
    else
      render Views::<%= controller_class_name %>::New.new(<%= singular_table_name %>: @<%= singular_table_name %>), status: :unprocessable_entity
    end
  end

  def update
    if @<%= singular_table_name %>.update(<%= "#{singular_table_name}_params" %>)
      redirect_to <%= redirect_resource_name %>, notice: <%= %("#{human_name} was successfully updated.") %>
    else
      render Views::<%= controller_class_name %>::Edit.new(<%= singular_table_name %>: @<%= singular_table_name %>), status: :unprocessable_entity
    end
  end

  def destroy
    @<%= singular_table_name %>.destroy!
    redirect_to <%= index_helper %>_url, notice: <%= %("#{human_name} was successfully destroyed.") %>
  end

  private
    def set_<%= singular_table_name %>
      @<%= singular_table_name %> = <%= orm_class.find(class_name, "params[:id]") %>
    end

    def <%= "#{singular_table_name}_params" %>
      <%- if attributes_names.empty? -%>
      params.fetch(:<%= singular_table_name %>, {})
      <%- else -%>
      params.require(:<%= singular_table_name %>).permit(<%= permitted_params %>)
      <%- end -%>
    end
end 