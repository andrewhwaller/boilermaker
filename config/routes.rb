Rails.application.routes.draw do
  # Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html

  # Reveal health status on /up that returns 200 if the app boots with no exceptions, otherwise 500.
  # Can be used by load balancers and uptime monitors to verify that the app is live.
  get "up" => "rails/health#show", as: :rails_health_check

  # Render dynamic PWA files from app/views/pwa/* (remember to link manifest in application.html.erb)
  # get "manifest" => "rails/pwa#manifest", as: :pwa_manifest
  # get "service-worker" => "rails/pwa#service_worker", as: :pwa_service_worker

  # Authentication routes generated by authentication-zero
  root "home#index"

  # Sign up routes
  post "sign_up", to: "registrations#create"
  get  "sign_up", to: "registrations#new"

  # Sign in routes
  post "sign_in", to: "sessions#create"
  get  "sign_in", to: "sessions#new"

  # Session management
  resources :sessions, only: [ :index, :show, :destroy ]

  # Password management
  resource :password, only: [ :edit, :update ]

  # Identity management
  namespace :identity do
    resource :email,              only: [ :edit, :update ]
    resource :email_verification, only: [ :show, :create ]
    resource :password_reset,     only: [ :new, :edit, :create, :update ]
  end

  # Two-factor authentication routes
  namespace :two_factor_authentication do
    namespace :profile do
      resources :recovery_codes, only: [ :index, :create ]
      resource  :totp,           only: [ :new, :create, :update ]
    end

    namespace :challenge do
      resource :recovery_codes, only: [ :new, :create ]
      resource :totp,           only: [ :new, :create ]
    end
  end

  # Invitations are account-scoped under /account/invitations

  # Masquerading
  post "users/:user_id/masquerade", to: "masquerades#create", as: :user_masquerade

  # Settings
  resource :settings, only: [ :show ]

  # Account switching
  resources :account_switches, only: [ :create ]

  # Account management (per-account admin)
  get "account", to: "account/dashboards#show", as: :account
  patch "account", to: "account/dashboards#update"
  scope :account, module: :account, as: :account do
    resources :users, only: [ :index, :show, :edit, :update, :destroy ]
    resources :invitations, only: [ :index, :new, :create, :destroy ]
    resource :settings, only: [ :show, :edit, :update ]
  end

  # Application administration (app-level admin)
  get "admin", to: "admin/dashboards#show", as: :admin
  namespace :admin do
    resources :accounts, only: [ :index, :show ]
    resources :users, only: [ :index, :show ]
  end

  # Mount Boilermaker engine for admin functionality only in development and test
  if Rails.env.development? || Rails.env.test?
    mount Boilermaker::Engine, at: "/boilermaker", as: :boilermaker
  end

  # Mount letter_opener_web for email testing in development
  if Rails.env.development?
    mount LetterOpenerWeb::Engine, at: "/letter_opener"
  end

  # Components showcase for development and test
  if Rails.env.development? || Rails.env.test?
    get "components", to: "home#components", as: :components_showcase
  end
end
